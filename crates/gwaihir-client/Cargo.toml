[package]
name = "gwaihir"
version = "0.1.0"
authors = ["Emil Ernerfeldt <emil.ernerfeldt@gmail.com>"]
edition = "2021"
rust-version = "1.71"

[dependencies]
egui = "0.26.2"
egui_plot = "0.26.2"
eframe = { version = "=0.26.2", default-features = false, features = [
    "accesskit",     # Make egui comptaible with screen readers. NOTE: adds a lot of dependencies.
    "default_fonts", # Embed the default egui fonts.
    "glow",          # Use the glow rendering backend. Alternative: "wgpu".
    "persistence",   # Enable restoring app state when restarting the app.
] }
serde = { version = "1", features = ["derive"] }
serde_json = "1.0.105"
serde_with = { version = "3.3.0", features = ["chrono_0_4"] }
pro-serde-versioned = { version = "1.0.2", features = ["derive"] }
winit = "0.29.10"
thiserror = "1.0.44"
lodepng = "3.7.2"
nutype = { version = "0.4.0-beta.2", features = ["serde"] }
auto-launch = "0.5.0"
chrono-humanize = "0.2.3"
eternity-rs = "0.2.0"
once_cell = "1.18.0"
bounded-vec-deque = "0.1.1"
delegate = "0.10.0"
notify-rust = "4"
derive-new = "0.6.0"
uuid = { version = "1.6.1", features = ["v4", "serde"] }
enum-iterator = "1.5.0"
kinded = "0.3.0"
maplit = "1.0.2"
exponential-backoff = "1.2.0"

# Triggers
ron = "0.8.1"                                          # May only need direct dependency while using RON for notification editing
upon = "0.8.0"
indexmap = { version = "2.2.3", features = ["serde"] }

# Logging
log = "0.4"
flexi_logger = "0.26.0"
log-panics = "2.1.0"
log_err = "1.1.1"

# Local
gwaihir-client-lib = { path = "../gwaihir-client-lib" }
networking-spacetimedb = { path = "../networking-spacetimedb" }

# If you fork https://github.com/emilk/egui you can test with:
# egui = { path = "../egui/crates/egui" }
# eframe = { path = "../egui/crates/eframe" }

# OS Interactions
raw-window-handle = "0.6.0"
tray-icon = { version = "0.11.3", optional = true }
directories-next = "2.0.0"
opener = "0.6.1"
active-win-pos-rs = "0.8.1"
rdev = "0.5.3"

[target.'cfg(target_os = "windows")'.dependencies]
winreg = "0.50.0"
windows = { version = "0.48.0", features = [
    "Win32_System_RemoteDesktop",
    "Win32_Foundation",
    "Win32_UI_WindowsAndMessaging",
    "Win32_Foundation",
] }

[target.'cfg(target_os = "linux")'.dependencies]
pulsectl-rs = "0.3.2"

[dev-dependencies]
assert_matches = "1.5.0"
lazy_static = "1.4.0"
mockall = "0.12.1"

[features]
hide_to_tray = ["tray-icon"]
